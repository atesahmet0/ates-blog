---
import Layout from '../../components/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return posts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props as Props;
const { Content } = await post.render();
const { title, date, description, tags } = post.data;
---

<Layout title={title}>
  <main class="post-content">
    <article>
      <header class="post-header">
        <h1>{title}</h1>
        <div class="post-meta">
          <time datetime={date}>
            {new Date(date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {tags && (
            <div class="tags">
              {tags.map((tag: string) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </div>
        <p class="description">{description}</p>
      </header>
      
      <div class="prose">
        <Content />
      </div>
    </article>
    
    <nav class="post-nav">
      <a href="/blog" class="back-to-blog">‚Üê Back to Blog</a>
    </nav>
  </main>
</Layout>

<style>
  .post-content {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .post-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #e9ecef;
  }

  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.9rem;
    color: #666;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: #007acc;
    color: white;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
  }

  .description {
    font-size: 1.1rem;
    color: #666;
    font-style: italic;
    margin: 0;
  }

  .prose {
    line-height: 1.7;
    font-size: 1.1rem;
  }

  /* Enhanced typography for blog content */
  .prose :global(h2) {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
    border-bottom: 2px solid #f0f0f0;
    padding-bottom: 0.5rem;
  }

  .prose :global(h3) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #444;
  }

  .prose :global(p) {
    margin-bottom: 1.5rem;
  }

  .prose :global(ul), .prose :global(ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .prose :global(li) {
    margin-bottom: 0.5rem;
  }

  .prose :global(blockquote) {
    background: #f8f9fa;
    border-left: 4px solid #007acc;
    margin: 2rem 0;
    padding: 1rem 1.5rem;
    font-style: italic;
    color: #555;
  }

  .prose :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
    font-size: 0.95rem;
  }

  .prose :global(th), .prose :global(td) {
    border: 1px solid #e9ecef;
    padding: 0.75rem;
    text-align: left;
  }

  .prose :global(th) {
    background: #f8f9fa;
    font-weight: 600;
  }

  .prose :global(code) {
    background: #f1f3f4;
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
    font-size: 0.9em;
    color: #d63384;
  }

  .prose :global(pre) {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid #e9ecef;
  }

  .prose :global(pre code) {
    background: none;
    padding: 0;
    color: inherit;
  }

  .post-nav {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e9ecef;
  }

  .back-to-blog {
    display: inline-flex;
    align-items: center;
    color: #007acc;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .back-to-blog:hover {
    color: #0066cc;
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .post-content {
      padding: 1rem;
    }

    .post-header h1 {
      font-size: 2rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
    }

    .prose {
      font-size: 1rem;
    }

    .prose :global(table) {
      font-size: 0.9rem;
    }

    .prose :global(th), .prose :global(td) {
      padding: 0.5rem;
    }
  }
</style>
