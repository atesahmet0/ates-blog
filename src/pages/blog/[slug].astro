---
import Layout from '../../components/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { siteConfig } from '../../config/site';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return posts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props as Props;
const { Content } = await post.render();
const { title, date, description, tags, banner, bannerAlt } = post.data;

// Use default banner if no specific banner is provided
const displayBanner = banner || siteConfig.blog.defaultBanner;
const displayBannerAlt = bannerAlt || `Default banner for ${title}`;
---

<Layout title={title} description={description} preloadImage={displayBanner}>
  <main class="post-content">
    <article>
      <div class="banner-container">
        <div class="image-skeleton"></div>
        <img 
          src={displayBanner} 
          alt={displayBannerAlt} 
          class="banner-image"
          loading="eager"
          decoding="async"
          fetchpriority="high"
        />
      </div>
      
      <header class="post-header">
        <h1>{title}</h1>
        <div class="post-meta">
          <time datetime={date}>
            {new Date(date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {tags && (
            <div class="tags">
              {tags.map((tag: string) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </div>
        <p class="description">{description}</p>
      </header>
      
      <div class="prose">
        <Content />
      </div>
    </article>
    
    <nav class="post-nav">
      <a href="/blog" class="back-to-blog">‚Üê Back to Blog</a>
    </nav>
  </main>
</Layout>

<style>
  .post-content {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .banner-container {
    margin-bottom: 3rem;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    position: relative;
    height: 300px;
    background-color: var(--color-bg-tertiary);
    clip-path: inset(0 round 20px);
  }

  .image-skeleton {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, var(--color-bg-tertiary) 25%, #333 50%, var(--color-bg-tertiary) 75%);
    background-size: 200% 100%;
    animation: skeleton-loading 1.5s infinite;
    opacity: 1;
    transition: opacity 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 2;
    will-change: opacity;
  }

  .banner-container.loaded .image-skeleton {
    opacity: 0;
    pointer-events: none;
  }

  .banner-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    opacity: 0;
    transition: opacity 0.7s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
    position: relative;
    z-index: 1;
    will-change: opacity;
  }

  .banner-container.loaded .banner-image {
    opacity: 1;
  }

  @keyframes skeleton-loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  /* Error state styling */
  .banner-container.error .image-skeleton {
    background: linear-gradient(90deg, var(--color-error-bg) 25%, var(--color-error-bg-alt) 50%, var(--color-error-bg) 75%);
    background-size: 200% 100%;
    animation: skeleton-loading 2s infinite;
  }

  /* Reduce motion for users who prefer it */
  @media (prefers-reduced-motion: reduce) {
    .image-skeleton {
      animation: none;
      background: var(--color-bg-tertiary);
    }
    
    .banner-image {
      transition: opacity 0.3s ease;
    }
  }

  .post-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--color-border-primary);
  }

  .post-header h1 {
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    margin-bottom: 1rem;
    color: var(--color-text-primary);
    line-height: var(--line-height-tight);
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    border: 1px solid var(--color-border-primary);
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    transition: all 0.2s ease;
    text-transform: lowercase;
  }

  .tag:hover {
    background: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
    transform: translateY(-1px);
  }
  }

  .description {
    font-size: var(--font-size-lg);
    color: var(--color-text-muted);
    font-style: italic;
    margin: 0;
    line-height: var(--line-height-relaxed);
  }

  .prose {
    line-height: var(--line-height-loose);
    font-size: var(--font-size-lg);
  }

  /* Enhanced typography for blog content */
  .prose :global(h2) {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: var(--color-text-primary);
    border-bottom: 2px solid var(--color-border-primary);
    padding-bottom: 0.5rem;
  }

  .prose :global(h3) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--color-text-secondary);
  }

  .prose :global(p) {
    margin-bottom: 1.5rem;
  }

  .prose :global(ul), .prose :global(ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .prose :global(li) {
    margin-bottom: 0.5rem;
  }

  .prose :global(blockquote) {
    background: var(--color-bg-secondary);
    border-left: 4px solid var(--color-primary);
    margin: 2rem 0;
    padding: 1rem 1.5rem;
    font-style: italic;
    color: var(--color-text-muted);
    border-radius: 4px;
  }

  .prose :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
    font-size: var(--font-size-sm);
    background: var(--color-bg-secondary);
    border-radius: 8px;
    overflow: hidden;
  }

  .prose :global(th), .prose :global(td) {
    border: 1px solid var(--color-border-primary);
    padding: 0.75rem;
    text-align: left;
  }

  .prose :global(th) {
    background: var(--color-border-primary);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
  }

  .prose :global(td) {
    color: var(--color-text-secondary);
  }

  .prose :global(code) {
    font-family: var(--font-mono);
    background: var(--color-code-bg);
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
    font-size: var(--font-size-sm);
    color: var(--color-code-text);
  }

  .prose :global(pre) {
    font-family: var(--font-mono);
    background: var(--color-code-block-bg);
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid var(--color-border-primary);
  }

  .prose :global(pre code) {
    background: none;
    padding: 0;
    color: inherit;
  }

  .post-nav {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e9ecef;
  }

  .back-to-blog {
    display: inline-flex;
    align-items: center;
    color: var(--color-primary);
    text-decoration: none;
    font-weight: var(--font-weight-medium);
    transition: color 0.2s ease;
  }

  .back-to-blog:hover {
    color: var(--color-primary-hover);
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .post-content {
      padding: 1rem;
    }

    .banner-container {
      height: 200px;
    }

    .banner-image {
      height: 200px;
    }

    .post-header h1 {
      font-size: 2rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
    }

    .prose {
      font-size: var(--font-size-base);
    }

    .prose :global(table) {
      font-size: var(--font-size-sm);
    }

    .prose :global(th), .prose :global(td) {
      padding: 0.5rem;
    }
  }
</style>
