name: Build and Deploy to FTP (Advanced)

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting (if available)
      run: npm run lint || echo "No lint script found, skipping..."
      continue-on-error: true

    - name: Run tests (if available)
      run: npm test || echo "No test script found, skipping..."
      continue-on-error: true

    - name: Build Astro site
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/

    - name: Display build contents
      run: |
        echo "Build directory contents:"
        ls -la dist/

    - name: Deploy to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: ./
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/.env*
        dangerous-clean-slate: true
        state-name: .ftp-deploy-sync-state.json
        dry-run: false
        log-level: verbose

    - name: Deployment Success Notification
      if: success()
      run: |
        echo "‚úÖ Successfully deployed to FTP server!"
        echo "üåê Your website should now be live."

    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs above for details."
